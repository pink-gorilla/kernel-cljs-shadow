;; gorilla-repl.fileformat = 2

;; **
;;; # Example to find differences in 2 complex data-structures
;; **

;; @@
; Automatically Download Dependencies (if they are not installed already) 
 (use '[pinkgorilla.helper]) 
 (pinkgorilla.helper/add-dependencies '[lambdaisland/deep-diff "0.0-47"])
;; @@
;; =>
;;; ["^ ","~:type","list-like","~:open",["span",["^ ","~:class","clj-map"],"{"],"~:close",["span",["^ ","^2","clj-map"],"}"],"~:separator",["span",", "],"~:items",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","~:content",["span",["^ ","^2","clj-symbol"],"org.clojure/clojure"],"~:value","org.clojure/clojure"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.10.0\""],"^7","\"1.10.0\""]],"^7","[org.clojure/clojure \"1.10.0\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-set"],"#{"],"^3",["span",["^ ","^2","clj-set"],"}"],"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/core.specs.alpha"],"^7","org.clojure/core.specs.alpha"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.2.44\""],"^7","\"0.2.44\""]],"^7","[org.clojure/core.specs.alpha \"0.2.44\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/spec.alpha"],"^7","org.clojure/spec.alpha"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.2.176\""],"^7","\"0.2.176\""]],"^7","[org.clojure/spec.alpha \"0.2.176\"]"]],"^7","#{[org.clojure/core.specs.alpha \"0.2.44\"] [org.clojure/spec.alpha \"0.2.176\"]}"]],"^7","[[org.clojure/clojure \"1.10.0\"] #{[org.clojure/core.specs.alpha \"0.2.44\"] [org.clojure/spec.alpha \"0.2.176\"]}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"mvxcvi/arrangement"],"^7","mvxcvi/arrangement"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.2.0\""],"^7","\"1.2.0\""]],"^7","[mvxcvi/arrangement \"1.2.0\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[mvxcvi/arrangement \"1.2.0\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"lambdaisland/deep-diff"],"^7","lambdaisland/deep-diff"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.0-47\""],"^7","\"0.0-47\""]],"^7","[lambdaisland/deep-diff \"0.0-47\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-set"],"#{"],"^3",["span",["^ ","^2","clj-set"],"}"],"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/clojure"],"^7","org.clojure/clojure"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.10.0\""],"^7","\"1.10.0\""]],"^7","[org.clojure/clojure \"1.10.0\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"mvxcvi/arrangement"],"^7","mvxcvi/arrangement"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.2.0\""],"^7","\"1.2.0\""]],"^7","[mvxcvi/arrangement \"1.2.0\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"mvxcvi/puget"],"^7","mvxcvi/puget"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.1.2\""],"^7","\"1.1.2\""]],"^7","[mvxcvi/puget \"1.1.2\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"fipp"],"^7","fipp"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.6.17\""],"^7","\"0.6.17\""]],"^7","[fipp \"0.6.17\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"tech.droit/clj-diff"],"^7","tech.droit/clj-diff"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.0.1\""],"^7","\"1.0.1\""]],"^7","[tech.droit/clj-diff \"1.0.1\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/core.rrb-vector"],"^7","org.clojure/core.rrb-vector"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.0.14\""],"^7","\"0.0.14\""]],"^7","[org.clojure/core.rrb-vector \"0.0.14\"]"]],"^7","#{[org.clojure/clojure \"1.10.0\"] [mvxcvi/arrangement \"1.2.0\"] [mvxcvi/puget \"1.1.2\"] [fipp \"0.6.17\"] [tech.droit/clj-diff \"1.0.1\"] [org.clojure/core.rrb-vector \"0.0.14\"]}"]],"^7","[[lambdaisland/deep-diff \"0.0-47\"] #{[org.clojure/clojure \"1.10.0\"] [mvxcvi/arrangement \"1.2.0\"] [mvxcvi/puget \"1.1.2\"] [fipp \"0.6.17\"] [tech.droit/clj-diff \"1.0.1\"] [org.clojure/core.rrb-vector \"0.0.14\"]}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"mvxcvi/puget"],"^7","mvxcvi/puget"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.1.2\""],"^7","\"1.1.2\""]],"^7","[mvxcvi/puget \"1.1.2\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[mvxcvi/puget \"1.1.2\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"fipp"],"^7","fipp"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.6.17\""],"^7","\"0.6.17\""]],"^7","[fipp \"0.6.17\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[fipp \"0.6.17\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/core.specs.alpha"],"^7","org.clojure/core.specs.alpha"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.2.44\""],"^7","\"0.2.44\""]],"^7","[org.clojure/core.specs.alpha \"0.2.44\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[org.clojure/core.specs.alpha \"0.2.44\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"tech.droit/clj-diff"],"^7","tech.droit/clj-diff"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.0.1\""],"^7","\"1.0.1\""]],"^7","[tech.droit/clj-diff \"1.0.1\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[tech.droit/clj-diff \"1.0.1\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/spec.alpha"],"^7","org.clojure/spec.alpha"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.2.176\""],"^7","\"0.2.176\""]],"^7","[org.clojure/spec.alpha \"0.2.176\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[org.clojure/spec.alpha \"0.2.176\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/core.rrb-vector"],"^7","org.clojure/core.rrb-vector"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.0.14\""],"^7","\"0.0.14\""]],"^7","[org.clojure/core.rrb-vector \"0.0.14\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[org.clojure/core.rrb-vector \"0.0.14\"] nil]"]],"^7","{[org.clojure/clojure \"1.10.0\"] #{[org.clojure/core.specs.alpha \"0.2.44\"] [org.clojure/spec.alpha \"0.2.176\"]}, [mvxcvi/arrangement \"1.2.0\"] nil, [lambdaisland/deep-diff \"0.0-47\"] #{[org.clojure/clojure \"1.10.0\"] [mvxcvi/arrangement \"1.2.0\"] [mvxcvi/puget \"1.1.2\"] [fipp \"0.6.17\"] [tech.droit/clj-diff \"1.0.1\"] [org.clojure/core.rrb-vector \"0.0.14\"]}, [mvxcvi/puget \"1.1.2\"] nil, [fipp \"0.6.17\"] nil, [org.clojure/core.specs.alpha \"0.2.44\"] nil, [tech.droit/clj-diff \"1.0.1\"] nil, [org.clojure/spec.alpha \"0.2.176\"] nil, [org.clojure/core.rrb-vector \"0.0.14\"] nil}"]
;; <=

;; @@
; Define Namespace for your notebook and require namespaces 
(ns solitary-autumn  
  (:require 
     [lambdaisland.deep-diff :as ddiff])) 
;; @@
;; =>
;;; ["^ ","~:type","html","~:content",["span",["^ ","~:class","clj-nil"],"nil"],"~:value","nil"]
;; <=

;; @@
(def a {:segments [{:type :free, :markup-visible false, :content {:value "# Reagent Widgets with Dynamic State", :type "text/x-markdown"}} {:type :code, :kernel :clj, :content {:value "; Define Namespace for your notebook and require namespaces \n(ns pacific-pond  \n  (:require \n     [pinkgorilla.ui.widget :refer [widget!]] \n     [pinkgorilla.ui.hiccup :refer [html!]] \n     [pinkgorilla.ui.reagent :refer [reagent!]]))", :type "text/x-clojure"}, :console-response "", :value-response {:type "html", :content ["span" {:class "clj-nil"} "nil"], :value "nil"}} {:type :free, :markup-visible false, :content {:value "vega charts rendered with **reagent**", :type "text/x-markdown"}} {:type :code, :kernel :clj, :content {:value "(reagent!\n '[:div\n   [:p \"sample vega plot:\"]\n  [vega \"https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json\"]])", :type "text/x-clojure"}, :console-response "", :value-response {:type "reagent", :content ["div" ["p" "sample vega plot:"] ["vega" "https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json"]], :value "[:div [:p \"sample vega plot:\"] [vega \"https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json\"]]"}} {:type :free, :markup-visible false, :content {:value ";;; manipulate {:samples [:name \"bar-chart\" :value \"https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json\"] }\n;;;  [:p \"sample\"]\n;;;  ", :type "text/x-markdown"}} {:type :code, :kernel :clj, :content {:value "(reagent!\n '[:div\n   [:p \"select the sample vega plot you want to see:\"]\n   [combo :widget-state :charturl \n     [{:label \"bar-chart\" :id \"https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json\"}\n      {:label \"population-pyramid\" :id \"https://vega.github.io/vega/examples/population-pyramid.vg.json\"}\n      {:label \"tree-layout\" :id \"https://vega.github.io/editor/spec/vega/tree-layout.vg.json\"}\n      {:label \"tree-map\" :id \"https://vega.github.io/editor/spec/vega/treemap.vg.json\"}\n      {:label \"force directed layout\" :id \"https://vega.github.io/editor/spec/vega/force-directed-layout.vg.json\"}\n      {:label \"stock index\" :id \"https://vega.github.io/editor/spec/vega/stock-index-chart.vg.json\"}\n      {:label \"overview-details\" :id \"https://vega.github.io/editor/spec/vega/overview-plus-detail.vg.json\"}\n      {:label \"scatterplot interaction\" :id \"https://vega.github.io/editor/spec/vega/brushing-scatter-plots.vg.json\"}\n      {:label \"unemployment map\" :id \"https://vega.github.io/editor/spec/vega/county-unemployment.vg.json\"}\n      {:label \"box plot\" :id \"https://vega.github.io/editor/spec/vega/box-plot.vg.json\"}\n      {:label \"contour\" :id \"https://vega.github.io/editor/spec/vega/contour-plot.vg.json\"}]]\n   [vegaa :widget-state :charturl]])", :type "text/x-clojure"}, :console-response "", :value-response {:type "reagent", :content ["div" ["p" "select the sample vega plot you want to see:"] ["combo" "widget-state" "charturl" [{:label "bar-chart", :id "https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json"} {:label "population-pyramid", :id "https://vega.github.io/vega/examples/population-pyramid.vg.json"} {:label "tree-layout", :id "https://vega.github.io/editor/spec/vega/tree-layout.vg.json"} {:label "tree-map", :id "https://vega.github.io/editor/spec/vega/treemap.vg.json"} {:label "force directed layout", :id "https://vega.github.io/editor/spec/vega/force-directed-layout.vg.json"} {:label "stock index", :id "https://vega.github.io/editor/spec/vega/stock-index-chart.vg.json"} {:label "overview-details", :id "https://vega.github.io/editor/spec/vega/overview-plus-detail.vg.json"} {:label "scatterplot interaction", :id "https://vega.github.io/editor/spec/vega/brushing-scatter-plots.vg.json"} {:label "unemployment map", :id "https://vega.github.io/editor/spec/vega/county-unemployment.vg.json"} {:label "box plot", :id "https://vega.github.io/editor/spec/vega/box-plot.vg.json"} {:label "contour", :id "https://vega.github.io/editor/spec/vega/contour-plot.vg.json"}]] ["vegaa" "widget-state" "charturl"]], :value "[:div [:p \"select the sample vega plot you want to see:\"] [combo :widget-state :charturl [{:label \"bar-chart\", :id \"https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json\"} {:label \"population-pyramid\", :id \"https://vega.github.io/vega/examples/population-pyramid.vg.json\"} {:label \"tree-layout\", :id \"https://vega.github.io/editor/spec/vega/tree-layout.vg.json\"} {:label \"tree-map\", :id \"https://vega.github.io/editor/spec/vega/treemap.vg.json\"} {:label \"force directed layout\", :id \"https://vega.github.io/editor/spec/vega/force-directed-layout.vg.json\"} {:label \"stock index\", :id \"https://vega.github.io/editor/spec/vega/stock-index-chart.vg.json\"} {:label \"overview-details\", :id \"https://vega.github.io/editor/spec/vega/overview-plus-detail.vg.json\"} {:label \"scatterplot interaction\", :id \"https://vega.github.io/editor/spec/vega/brushing-scatter-plots.vg.json\"} {:label \"unemployment map\", :id \"https://vega.github.io/editor/spec/vega/county-unemployment.vg.json\"} {:label \"box plot\", :id \"https://vega.github.io/editor/spec/vega/box-plot.vg.json\"} {:label \"contour\", :id \"https://vega.github.io/editor/spec/vega/contour-plot.vg.json\"}]] [vegaa :widget-state :charturl]]"}} {:type :code, :kernel :clj, :content {:value "; this renders the above selected graph - widget state is notebook scoped. \n(reagent!\n '[:div\n   [vegaa :widget-state :charturl]])\n   ", :type "text/x-clojure"}, :console-response "", :value-response {:type "reagent", :content ["div" ["vegaa" "widget-state" "charturl"]], :value "[:div [vegaa :widget-state :charturl]]"}} {:type :code, :kernel :clj, :content {:value "; test for slider\n(reagent!\n '[:div\n   [slider :widget-state :x 0 100 5]\n   [slider :widget-state :y 0 100 5]\n   [slider :widget-state :z 0 100 5]])\n   \n   ", :type "text/x-clojure"}, :console-response "", :value-response {:type "reagent", :content ["div" ["slider" "widget-state" "x" 0 100 5] ["slider" "widget-state" "y" 0 100 5] ["slider" "widget-state" "z" 0 100 5]], :value "[:div [slider :widget-state :x 0 100 5] [slider :widget-state :y 0 100 5] [slider :widget-state :z 0 100 5]]"}}]}) 
;; @@
;; =>
;;; ["^ ","~:type","html","~:content",["span",["^ ","~:class","clj-var"],"#'solitary-autumn/a"],"~:value","#'solitary-autumn/a"]
;; <=

;; @@
(def b {:segments [{:type :free, :markup-visible false, :content {:value "# Reagent Widgets with Dynamic State", :type "text/x-markdown"}} {:type :code, :kernel :clj, :content {:value "; Define Namespace for your notebook and require namespaces \n(ns pacific-pond  \n  (:require \n     [pinkgorilla.ui.widget :refer [widget!]] \n     [pinkgorilla.ui.hiccup :refer [html!]] \n     [pinkgorilla.ui.reagent :refer [reagent!]]))", :type "text/x-clojure"}, :console-response "", :value-response {:type "html", :content ["span" {:class "clj-nil"} "nil"], :value "nil"}} {:type :free, :markup-visible false, :content {:value "vega charts rendered with **reagent**", :type "text/x-markdown"}} {:type :code, :kernel :clj, :content {:value "(reagent!\n '[:div\n   [:p \"sample vega plot:\"]\n  [vega \"https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json\"]])", :type "text/x-clojure"}, :console-response "", :value-response {:type "reagent", :content ["div" ["p" "sample vega plot:"] ["vega" "https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json"]], :value "[:div [:p \"sample vega plot:\"] [vega \"https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json\"]]"}} {:type :free, :markup-visible false, :content {:value ";;; ;;; manipulate {:samples [:name \"bar-chart\" :value \"https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json\"] }\n;;; ;;;  [:p \"sample\"]\n;;; ;;;  ", :type "text/x-markdown"}} {:type :code, :kernel :clj, :content {:value "(reagent!\n '[:div\n   [:p \"select the sample vega plot you want to see:\"]\n   [combo :widget-state :charturl \n     [{:label \"bar-chart\" :id \"https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json\"}\n      {:label \"population-pyramid\" :id \"https://vega.github.io/vega/examples/population-pyramid.vg.json\"}\n      {:label \"tree-layout\" :id \"https://vega.github.io/editor/spec/vega/tree-layout.vg.json\"}\n      {:label \"tree-map\" :id \"https://vega.github.io/editor/spec/vega/treemap.vg.json\"}\n      {:label \"force directed layout\" :id \"https://vega.github.io/editor/spec/vega/force-directed-layout.vg.json\"}\n      {:label \"stock index\" :id \"https://vega.github.io/editor/spec/vega/stock-index-chart.vg.json\"}\n      {:label \"overview-details\" :id \"https://vega.github.io/editor/spec/vega/overview-plus-detail.vg.json\"}\n      {:label \"scatterplot interaction\" :id \"https://vega.github.io/editor/spec/vega/brushing-scatter-plots.vg.json\"}\n      {:label \"unemployment map\" :id \"https://vega.github.io/editor/spec/vega/county-unemployment.vg.json\"}\n      {:label \"box plot\" :id \"https://vega.github.io/editor/spec/vega/box-plot.vg.json\"}\n      {:label \"contour\" :id \"https://vega.github.io/editor/spec/vega/contour-plot.vg.json\"}]]\n   [vegaa :widget-state :charturl]])", :type "text/x-clojure"}, :console-response "", :value-response {:type "reagent", :content ["div" ["p" "select the sample vega plot you want to see:"] ["combo" "widget-state" "charturl" [{:label "bar-chart", :id "https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json"} {:label "population-pyramid", :id "https://vega.github.io/vega/examples/population-pyramid.vg.json"} {:label "tree-layout", :id "https://vega.github.io/editor/spec/vega/tree-layout.vg.json"} {:label "tree-map", :id "https://vega.github.io/editor/spec/vega/treemap.vg.json"} {:label "force directed layout", :id "https://vega.github.io/editor/spec/vega/force-directed-layout.vg.json"} {:label "stock index", :id "https://vega.github.io/editor/spec/vega/stock-index-chart.vg.json"} {:label "overview-details", :id "https://vega.github.io/editor/spec/vega/overview-plus-detail.vg.json"} {:label "scatterplot interaction", :id "https://vega.github.io/editor/spec/vega/brushing-scatter-plots.vg.json"} {:label "unemployment map", :id "https://vega.github.io/editor/spec/vega/county-unemployment.vg.json"} {:label "box plot", :id "https://vega.github.io/editor/spec/vega/box-plot.vg.json"} {:label "contour", :id "https://vega.github.io/editor/spec/vega/contour-plot.vg.json"}]] ["vegaa" "widget-state" "charturl"]], :value "[:div [:p \"select the sample vega plot you want to see:\"] [combo :widget-state :charturl [{:label \"bar-chart\", :id \"https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json\"} {:label \"population-pyramid\", :id \"https://vega.github.io/vega/examples/population-pyramid.vg.json\"} {:label \"tree-layout\", :id \"https://vega.github.io/editor/spec/vega/tree-layout.vg.json\"} {:label \"tree-map\", :id \"https://vega.github.io/editor/spec/vega/treemap.vg.json\"} {:label \"force directed layout\", :id \"https://vega.github.io/editor/spec/vega/force-directed-layout.vg.json\"} {:label \"stock index\", :id \"https://vega.github.io/editor/spec/vega/stock-index-chart.vg.json\"} {:label \"overview-details\", :id \"https://vega.github.io/editor/spec/vega/overview-plus-detail.vg.json\"} {:label \"scatterplot interaction\", :id \"https://vega.github.io/editor/spec/vega/brushing-scatter-plots.vg.json\"} {:label \"unemployment map\", :id \"https://vega.github.io/editor/spec/vega/county-unemployment.vg.json\"} {:label \"box plot\", :id \"https://vega.github.io/editor/spec/vega/box-plot.vg.json\"} {:label \"contour\", :id \"https://vega.github.io/editor/spec/vega/contour-plot.vg.json\"}]] [vegaa :widget-state :charturl]]"}} {:type :code, :kernel :clj, :content {:value "; this renders the above selected graph - widget state is notebook scoped. \n(reagent!\n '[:div\n   [vegaa :widget-state :charturl]])\n   ", :type "text/x-clojure"}, :console-response "", :value-response {:type "reagent", :content ["div" ["vegaa" "widget-state" "charturl"]], :value "[:div [vegaa :widget-state :charturl]]"}} {:type :code, :kernel :clj, :content {:value "; test for slider\n(reagent!\n '[:div\n   [slider :widget-state :x 0 100 5]\n   [slider :widget-state :y 0 100 5]\n   [slider :widget-state :z 0 100 5]])\n   \n   ", :type "text/x-clojure"}, :console-response "", :value-response {:type "reagent", :content ["div" ["slider" "widget-state" "x" 0 100 5] ["slider" "widget-state" "y" 0 100 5] ["slider" "widget-state" "z" 0 100 5]], :value "[:div [slider :widget-state :x 0 100 5] [slider :widget-state :y 0 100 5] [slider :widget-state :z 0 100 5]]"}}]})
;; @@
;; =>
;;; ["^ ","~:type","html","~:content",["span",["^ ","~:class","clj-var"],"#'solitary-autumn/b"],"~:value","#'solitary-autumn/b"]
;; <=

;; @@
(ddiff/pretty-print (ddiff/diff a b))
;; @@
;; ->
;;; m[1;33m:content[0m [1;31m[[0m[1;35m"div"[0m
;;; [1;31m                                        [[0m[1;35m"slider"[0m [1;35m"widget-state"[0m [1;35m"x"[0m [36m0[0m [36m100[0m [36m5[0m[1;31m][0m
;;; [1;31m                                        [[0m[1;35m"slider"[0m [1;35m"widget-state"[0m [1;35m"y"[0m [36m0[0m [36m100[0m [36m5[0m[1;31m][0m
;;; [1;31m                                        [[0m[1;35m"slider"[0m [1;35m"widget-state"[0m [1;35m"z"[0m [36m0[0m [36m100[0m [36m5[0m[1;31m][0m[1;31m][0m,
;;; [1;33m                              :type[0m [1;35m"reagent"[0m,
;;; [1;33m                              :value[0m [1;35m"[:div [slider :widget-state :x 0 100 5] [slider :widget-state :y 0 100 5] [slider :widget-state :z 0 100 5]]"[0m[1;31m}[0m[1;31m}[0m[1;31m][0m[1;31m}[0m
;; <-
;; =>
;;; ["^ ","~:type","html","~:content",["span",["^ ","~:class","clj-nil"],"nil"],"~:value","nil"]
;; <=

;; @@
(ddiff/diff a b)
;; @@
;; =>
;;; ["^ ","~:type","list-like","~:open",["span",["^ ","~:class","clj-map"],"{"],"~:close",["span",["^ ","^2","clj-map"],"}"],"~:separator",["span",", "],"~:items",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","~:content",["span",["^ ","^2","clj-keyword"],":segments"],"~:value",":segments"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-map"],"{"],"^3",["span",["^ ","^2","clj-map"],"}"],"^4",["span",", "],"^5",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":type"],"^7",":type"],["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":free"],"^7",":free"]],"^7","[:type :free]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":markup-visible"],"^7",":markup-visible"],["^ ","^0","html","^6",["span",["^ ","^2","clj-unkown"],"false"],"^7","false"]],"^7","[:markup-visible false]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":content"],"^7",":content"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-map"],"{"],"^3",["span",["^ ","^2","clj-map"],"}"],"^4",["span",", "],"^5",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":value"],"^7",":value"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-record"],"#lambdaisland.deep_diff.diff.Mismatch{"],"^3",["span",["^ ","^2","clj-record"],"}"],"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":-"],"^7",":-"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\\n\\n\""],"^7","\"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\\n\\n\""]],"^7","[:- \"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\\n\\n\"]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":+"],"^7",":+"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\""],"^7","\"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\""]],"^7","[:+ \"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\"]"]],"^7","#lambdaisland.deep_diff.diff.Mismatch{:- \"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\\n\\n\", :+ \"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\"}"]],"^7","[:value #lambdaisland.deep_diff.diff.Mismatch{:- \"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\\n\\n\", :+ \"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\"}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":type"],"^7",":type"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"text/x-markdown\""],"^7","\"text/x-markdown\""]],"^7","[:type \"text/x-markdown\"]"]],"^7","{:value #lambdaisland.deep_diff.diff.Mismatch{:- \"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\\n\\n\", :+ \"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\"}, :type \"text/x-markdown\"}"]],"^7","[:content {:value #lambdaisland.deep_diff.diff.Mismatch{:- \"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\\n\\n\", :+ \"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\"}, :type \"text/x-markdown\"}]"]],"^7","{:type :free, :markup-visible false, :content {:value #lambdaisland.deep_diff.diff.Mismatch{:- \"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\\n\\n\", :+ \"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\"}, :type \"text/x-markdown\"}}"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-map"],"{"],"^3",["span",["^ ","^2","clj-map"],"}"],"^4",["span",", "],"^5",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":type"],"^7",":type"],["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":code"],"^7",":code"]],"^7","[:type :code]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":kernel"],"^7",":kernel"],["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":clj"],"^7",":clj"]],"^7","[:kernel :clj]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":content"],"^7",":content"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-map"],"{"],"^3",["span",["^ ","^2","clj-map"],"}"],"^4",["span",", "],"^5",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":value"],"^7",":value"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"; Automatically Download Dependencies (if they are not installed already) \\n (use '[pinkgorilla.helper]) \\n (pinkgorilla.helper/add-dependencies '[pinkgorilla.ui.gorilla-plot \\\"0.8.6\\\"])\""],"^7","\"; Automatically Download Dependencies (if they are not installed already) \\n (use '[pinkgorilla.helper]) \\n (pinkgorilla.helper/add-dependencies '[pinkgorilla.ui.gorilla-plot \\\"0.8.6\\\"])\""]],"^7","[:value \"; Automatically Download Dependencies (if they are not installed already) \\n (use '[pinkgorilla.helper]) \\n (pinkgorilla.helper/add-dependencies '[pinkgorilla.ui.gorilla-plot \\\"0.8.6\\\"])\"]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":type"],"^7",":type"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"text/x-clojure\""],"^7","\"text/x-clojure\""]],"^7","[:type \"text/x-clojure\"]"]],"^7","{:value \"; Automatically Download Dependencies (if they are not installed already) \\n (use '[pinkgorilla.helper]) \\n (pinkgorilla.helper/add-dependencies '[pinkgorilla.ui.gorilla-plot \\\"0.8.6\\\"])\", :type \"text/x-clojure\"}"]],"^7","[:content {:value \"; Automatically Download Dependencies (if they are not installed already) \\n (use '[pinkgorilla.helper]) \\n (pinkgorilla.helper/add-dependencies '[pinkgorilla.ui.gorilla-plot \\\"0.8.6\\\"])\", :type \"text/x-clojure\"}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":console-response"],"^7",":console-response"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"\""],"^7","\"\""]],"^7","[:console-response \"\"]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":value-response"],"^7",":value-response"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-map"],"{"],"^3",["span",["^ ","^2","clj-map"],"}"],"^4",["span",", "],"^5",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":type"],"^7",":type"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"html\""],"^7","\"html\""]],"^7","[:type \"html\"]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":value"],"^7",":value"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":span"],"^7",":span"]],"^7","[:span]"]],"^7","[:value [:span]]"]],"^7","{:type \"html\", :value [:span]}"]],"^7","[:value-response {:type \"html\", :value [:span]}]"]],"^7","{:type :code, :kernel :clj, :content {:value \"; Automatically Download Dependencies (if they are not installed already) \\n (use '[pinkgorilla.helper]) \\n (pinkgorilla.helper/add-dependencies '[pinkgorilla.ui.gorilla-plot \\\"0.8.6\\\"])\", :type \"text/x-clojure\"}, :console-response \"\", :value-response {:type \"html\", :value [:span]}}"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-map"],"{"],"^3",["span",["^ ","^2","clj-map"],"}"],"^4",["span",", "],"^5",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":type"],"^7",":type"],["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":code"],"^7",":code"]],"^7","[:type :code]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":kernel"],"^7",":kernel"],["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":clj"],"^7",":clj"]],"^7","[:kernel :clj]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":content"],"^7",":content"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-map"],"{"],"^3",["span",["^ ","^2","clj-map"],"}"],"^4",["span",", "],"^5",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":value"],"^7",":value"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"; Define Namespace for your notebook and require namespaces \\n(ns parched-volcano  \\n  (:require \\n     [pinkgorilla.ui.hiccup :refer [html!]] \\n     [pinkgorilla.ui.vega :refer [vega!]] \\n     [pinkgorilla.ui.gorilla-plot.core :refer [list-plot bar-chart compose histogram plot]])) \\n\""],"^7","\"; Define Namespace for your notebook and require namespaces \\n(ns parched-volcano  \\n  (:require \\n     [pinkgorilla.ui.hiccup :refer [html!]] \\n     [pinkgorilla.ui.vega :refer [vega!]] \\n     [pinkgorilla.ui.gorilla-plot.core :refer [list-plot bar-chart compose histogram plot]])) \\n\""]],"^7","[:value \"; Define Namespace for your notebook and require namespaces \\n(ns parched-volcano  \\n  (:require \\n     [pinkgorilla.ui.hiccup :refer [html!]] \\n     [pinkgorilla.ui.vega :refer [vega!]] \\n     [pinkgorilla.ui.gorilla-plot.core :refer [list-plot bar-chart compose histogram plot]])) \\n\"]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":type"],"^7",":type"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"text/x-clojure\""],"^7","\"text/x-clojure\""]],"^7","[:type \"text/x-clojure\"]"]],"^7","{:value \"; Define Namespace for your notebook and require namespaces \\n(ns parched-volcano  \\n  (:require \\n     [pinkgorilla.ui.hiccup :refer [html!]] \\n     [pinkgorilla.ui.vega :refer [vega!]] \\n     [pinkgorilla.ui.gorilla-plot.core :refer [list-plot bar-chart compose histogram plot]])) \\n\", :type \"text/x-clojure\"}"]],"^7","[:content {:value \"; Define Namespace for your notebook and require namespaces \\n(ns parched-volcano  \\n  (:require \\n     [pinkgorilla.ui.hiccup :refer [html!]] \\n     [pinkgorilla.ui.vega :refer [vega!]] \\n     [pinkgorilla.ui.gorilla-plot.core :refer [list-plot bar-chart compose histogram plot]])) \\n\", :type \"text/x-clojure\"}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":console-response"],"^7",":console-response"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"\""],"^7","\"\""]],"^7","[:console-response \"\"]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":value-response"],"^7",":value-response"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-map"],"{"],"^3",["span",["^ ","^2","clj-map"],"}"],"^4",["span",", "],"^5",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":type"],"^7",":type"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"html\""],"^7","\"html\""]],"^7","[:type \"html\"]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":value"],"^7",":value"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":span"],"^7",":span"]],"^7","[:span]"]],"^7","[:value [:span]]"]],"^7","{:type \"html\", :value [:span]}"]],"^7","[:value-response {:type \"html\", :value [:span]}]"]],"^7","{:type :code, :kernel :clj, :content {:value \"; Define Namespace for your notebook and require namespaces \\n(ns parched-volcano  \\n  (:require \\n     [pinkgorilla.ui.hiccup :refer [html!]] \\n     [pinkgorilla.ui.vega :refer [vega!]] \\n     [pinkgorilla.ui.gorilla-plot.core :refer [list-plot bar-chart compose histogram plot]])) \\n\", :type \"text/x-clojure\"}, :console-response \"\", :value-response {:type \"html\", :value [:span]}}"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-map"],"{"],"^3",["span",["^ ","^2","clj-map"],"}"],"^4",["span",", "],"^5",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":type"],"^7",":type"],["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":code"],"^7",":code"]],"^7","[:type :code]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":kernel"],"^7",":kernel"],["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":clj"],"^7",":clj"]],"^7","[:kernel :clj]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":content"],"^7",":content"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-map"],"{"],"^3",["span",["^ ","^2","clj-map"],"}"],"^4",["span",", "],"^5",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":value"],"^7",":value"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"(html! \\n  [:div \\n    [:h4 \\\"Hiccup Markup\\\"] \\n    [:div {:style \\\"color:green;font-weight:bold;background-color:pink\\\"} \\\"World!\\\" \\n    [:ol \\n       [:li \\\"The Pinkie\\\"] \\n       [:li \\\"The Pinkie and the Brain\\\"]  \\n       [:li \\\"What will we be doing today?\\\"]]  \\n    [:img {:height 100 :width 100 :src \\\"https://images-na.ssl-images-amazon.com/images/I/61LeuO%2Bj0xL._SL1500_.jpg\\\"}]]])\\n            \""],"^7","\"(html! \\n  [:div \\n    [:h4 \\\"Hiccup Markup\\\"] \\n    [:div {:style \\\"color:green;font-weight:bold;background-color:pink\\\"} \\\"World!\\\" \\n    [:ol \\n       [:li \\\"The Pinkie\\\"] \\n       [:li \\\"The Pinkie and the Brain\\\"]  \\n       [:li \\\"What will we be doing today?\\\"]]  \\n    [:img {:height 100 :width 100 :src \\\"https://images-na.ssl-images-amazon.com/images/I/61LeuO%2Bj0xL._SL1500_.jpg\\\"}]]])\\n            \""]],"^7","[:value \"(html! \\n  [:div \\n    [:h4 \\\"Hiccup Markup\\\"] \\n    [:div {:style \\\"color:green;font-weight:bold;background-color:pink\\\"} \\\"World!\\\" \\n    [:ol \\n       [:li \\\"The Pinkie\\\"] \\n       [:li \\\"The Pinkie and the Brain\\\"]  \\n       [:li \\\"What will we be doing today?\\\"]]  \\n    [:img {:height 100 :width 100 :src \\\"https://images-na.ssl-images-amazon.com/images/I/61LeuO%2Bj0xL._SL1500_.jpg\\\"}]]])\\n            \"]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":type"],"^7",":type"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"text/x-clojure\""],"^7","\"text/x-clojure\""]],"^7","[:type \"text/x-clojure\"]"]],"^7","{:value \"(html! \\n  [:div \\n    [:h4 \\\"Hiccup Markup\\\"] \\n    [:div {:style \\\"color:green;font-weight:bold;background-color:pink\\\"} \\\"World!\\\" \\n    [:ol \\n       [:li \\\"The Pinkie\\\"] \\n       [:li \\\"The Pinkie and the Brain\\\"]  \\n       [:li \\\"What will we be doing today?\\\"]]  \\n    [:img {:height 100 :width 100 :src \\\"https://images-na.ssl-images-amazon.com/images/I/61LeuO%2Bj0xL._SL1500_.jpg\\\"}]]])\\n            \", :type \"text/x-clojure\"}"]],"^7","[:content {:value \"(html! \\n  [:div \\n    [:h4 \\\"Hiccup Markup\\\"] \\n    [:div {:style \\\"color:green;font-weight:bold;background-color:pink\\\"} \\\"World!\\\" \\n    [:ol \\n       [:li \\\"The Pinkie\\\"] \\n       [:li \\\"The Pinkie and the Brain\\\"]  \\n       [:li \\\"What will we be doing today?\\\"]]  \\n    [:img {:height 100 :width 100 :src \\\"https://images-na.ssl-images-amazon.com/images/I/61LeuO%2Bj0xL._SL1500_.jpg\\\"}]]])\\n            \", :type \"text/x-clojure\"}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":console-response"],"^7",":console-response"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"\""],"^7","\"\""]],"^7","[:console-response \"\"]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":value-response"],"^7",":value-response"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-map"],"{"],"^3",["span",["^ ","^2","clj-map"],"}"],"^4",["span",", "],"^5",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":type"],"^7",":type"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"html\""],"^7","\"html\""]],"^7","[:type \"html\"]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":value"],"^7",":value"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":span"],"^7",":span"]],"^7","[:span]"]],"^7","[:value [:span]]"]],"^7","{:type \"html\", :value [:span]}"]],"^7","[:value-response {:type \"html\", :value [:span]}]"]],"^7","{:type :code, :kernel :clj, :content {:value \"(html! \\n  [:div \\n    [:h4 \\\"Hiccup Markup\\\"] \\n    [:div {:style \\\"color:green;font-weight:bold;background-color:pink\\\"} \\\"World!\\\" \\n    [:ol \\n       [:li \\\"The Pinkie\\\"] \\n       [:li \\\"The Pinkie and the Brain\\\"]  \\n       [:li \\\"What will we be doing today?\\\"]]  \\n    [:img {:height 100 :width 100 :src \\\"https://images-na.ssl-images-amazon.com/images/I/61LeuO%2Bj0xL._SL1500_.jpg\\\"}]]])\\n            \", :type \"text/x-clojure\"}, :console-response \"\", :value-response {:type \"html\", :value [:span]}}"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-map"],"{"],"^3",["span",["^ ","^2","clj-map"],"}"],"^4",["span",", "],"^5",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":type"],"^7",":type"],["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":code"],"^7",":code"]],"^7","[:type :code]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":kernel"],"^7",":kernel"],["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":clj"],"^7",":clj"]],"^7","[:kernel :clj]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":content"],"^7",":content"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-map"],"{"],"^3",["span",["^ ","^2","clj-map"],"}"],"^4",["span",", "],"^5",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":value"],"^7",":value"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\" (list-plot [5 6 7 3 9 20] ) \\n\""],"^7","\" (list-plot [5 6 7 3 9 20] ) \\n\""]],"^7","[:value \" (list-plot [5 6 7 3 9 20] ) \\n\"]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":type"],"^7",":type"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"text/x-clojure\""],"^7","\"text/x-clojure\""]],"^7","[:type \"text/x-clojure\"]"]],"^7","{:value \" (list-plot [5 6 7 3 9 20] ) \\n\", :type \"text/x-clojure\"}"]],"^7","[:content {:value \" (list-plot [5 6 7 3 9 20] ) \\n\", :type \"text/x-clojure\"}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":console-response"],"^7",":console-response"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"\""],"^7","\"\""]],"^7","[:console-response \"\"]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":value-response"],"^7",":value-response"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-map"],"{"],"^3",["span",["^ ","^2","clj-map"],"}"],"^4",["span",", "],"^5",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":type"],"^7",":type"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"html\""],"^7","\"html\""]],"^7","[:type \"html\"]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":value"],"^7",":value"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":span"],"^7",":span"]],"^7","[:span]"]],"^7","[:value [:span]]"]],"^7","{:type \"html\", :value [:span]}"]],"^7","[:value-response {:type \"html\", :value [:span]}]"]],"^7","{:type :code, :kernel :clj, :content {:value \" (list-plot [5 6 7 3 9 20] ) \\n\", :type \"text/x-clojure\"}, :console-response \"\", :value-response {:type \"html\", :value [:span]}}"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-map"],"{"],"^3",["span",["^ ","^2","clj-map"],"}"],"^4",["span",", "],"^5",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":type"],"^7",":type"],["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":code"],"^7",":code"]],"^7","[:type :code]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":kernel"],"^7",":kernel"],["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":clj"],"^7",":clj"]],"^7","[:kernel :clj]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":content"],"^7",":content"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-map"],"{"],"^3",["span",["^ ","^2","clj-map"],"}"],"^4",["span",", "],"^5",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":value"],"^7",":value"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\" (vega! \\\"https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json\\\" ) \\n\""],"^7","\" (vega! \\\"https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json\\\" ) \\n\""]],"^7","[:value \" (vega! \\\"https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json\\\" ) \\n\"]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":type"],"^7",":type"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"text/x-clojure\""],"^7","\"text/x-clojure\""]],"^7","[:type \"text/x-clojure\"]"]],"^7","{:value \" (vega! \\\"https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json\\\" ) \\n\", :type \"text/x-clojure\"}"]],"^7","[:content {:value \" (vega! \\\"https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json\\\" ) \\n\", :type \"text/x-clojure\"}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":console-response"],"^7",":console-response"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"\""],"^7","\"\""]],"^7","[:console-response \"\"]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":value-response"],"^7",":value-response"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-map"],"{"],"^3",["span",["^ ","^2","clj-map"],"}"],"^4",["span",", "],"^5",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":type"],"^7",":type"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"html\""],"^7","\"html\""]],"^7","[:type \"html\"]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":value"],"^7",":value"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":span"],"^7",":span"]],"^7","[:span]"]],"^7","[:value [:span]]"]],"^7","{:type \"html\", :value [:span]}"]],"^7","[:value-response {:type \"html\", :value [:span]}]"]],"^7","{:type :code, :kernel :clj, :content {:value \" (vega! \\\"https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json\\\" ) \\n\", :type \"text/x-clojure\"}, :console-response \"\", :value-response {:type \"html\", :value [:span]}}"]],"^7","[{:type :free, :markup-visible false, :content {:value #lambdaisland.deep_diff.diff.Mismatch{:- \"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\\n\\n\", :+ \"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\"}, :type \"text/x-markdown\"}} {:type :code, :kernel :clj, :content {:value \"; Automatically Download Dependencies (if they are not installed already) \\n (use '[pinkgorilla.helper]) \\n (pinkgorilla.helper/add-dependencies '[pinkgorilla.ui.gorilla-plot \\\"0.8.6\\\"])\", :type \"text/x-clojure\"}, :console-response \"\", :value-response {:type \"html\", :value [:span]}} {:type :code, :kernel :clj, :content {:value \"; Define Namespace for your notebook and require namespaces \\n(ns parched-volcano  \\n  (:require \\n     [pinkgorilla.ui.hiccup :refer [html!]] \\n     [pinkgorilla.ui.vega :refer [vega!]] \\n     [pinkgorilla.ui.gorilla-plot.core :refer [list-plot bar-chart compose histogram plot]])) \\n\", :type \"text/x-clojure\"}, :console-response \"\", :value-response {:type \"html\", :value [:span]}} {:type :code, :kernel :clj, :content {:value \"(html! \\n  [:div \\n    [:h4 \\\"Hiccup Markup\\\"] \\n    [:div {:style \\\"color:green;font-weight:bold;background-color:pink\\\"} \\\"World!\\\" \\n    [:ol \\n       [:li \\\"The Pinkie\\\"] \\n       [:li \\\"The Pinkie and the Brain\\\"]  \\n       [:li \\\"What will we be doing today?\\\"]]  \\n    [:img {:height 100 :width 100 :src \\\"https://images-na.ssl-images-amazon.com/images/I/61LeuO%2Bj0xL._SL1500_.jpg\\\"}]]])\\n            \", :type \"text/x-clojure\"}, :console-response \"\", :value-response {:type \"html\", :value [:span]}} {:type :code, :kernel :clj, :content {:value \" (list-plot [5 6 7 3 9 20] ) \\n\", :type \"text/x-clojure\"}, :console-response \"\", :value-response {:type \"html\", :value [:span]}} {:type :code, :kernel :clj, :content {:value \" (vega! \\\"https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json\\\" ) \\n\", :type \"text/x-clojure\"}, :console-response \"\", :value-response {:type \"html\", :value [:span]}}]"]],"^7","[:segments [{:type :free, :markup-visible false, :content {:value #lambdaisland.deep_diff.diff.Mismatch{:- \"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\\n\\n\", :+ \"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\"}, :type \"text/x-markdown\"}} {:type :code, :kernel :clj, :content {:value \"; Automatically Download Dependencies (if they are not installed already) \\n (use '[pinkgorilla.helper]) \\n (pinkgorilla.helper/add-dependencies '[pinkgorilla.ui.gorilla-plot \\\"0.8.6\\\"])\", :type \"text/x-clojure\"}, :console-response \"\", :value-response {:type \"html\", :value [:span]}} {:type :code, :kernel :clj, :content {:value \"; Define Namespace for your notebook and require namespaces \\n(ns parched-volcano  \\n  (:require \\n     [pinkgorilla.ui.hiccup :refer [html!]] \\n     [pinkgorilla.ui.vega :refer [vega!]] \\n     [pinkgorilla.ui.gorilla-plot.core :refer [list-plot bar-chart compose histogram plot]])) \\n\", :type \"text/x-clojure\"}, :console-response \"\", :value-response {:type \"html\", :value [:span]}} {:type :code, :kernel :clj, :content {:value \"(html! \\n  [:div \\n    [:h4 \\\"Hiccup Markup\\\"] \\n    [:div {:style \\\"color:green;font-weight:bold;background-color:pink\\\"} \\\"World!\\\" \\n    [:ol \\n       [:li \\\"The Pinkie\\\"] \\n       [:li \\\"The Pinkie and the Brain\\\"]  \\n       [:li \\\"What will we be doing today?\\\"]]  \\n    [:img {:height 100 :width 100 :src \\\"https://images-na.ssl-images-amazon.com/images/I/61LeuO%2Bj0xL._SL1500_.jpg\\\"}]]])\\n            \", :type \"text/x-clojure\"}, :console-response \"\", :value-response {:type \"html\", :value [:span]}} {:type :code, :kernel :clj, :content {:value \" (list-plot [5 6 7 3 9 20] ) \\n\", :type \"text/x-clojure\"}, :console-response \"\", :value-response {:type \"html\", :value [:span]}} {:type :code, :kernel :clj, :content {:value \" (vega! \\\"https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json\\\" ) \\n\", :type \"text/x-clojure\"}, :console-response \"\", :value-response {:type \"html\", :value [:span]}}]]"]],"^7","{:segments [{:type :free, :markup-visible false, :content {:value #lambdaisland.deep_diff.diff.Mismatch{:- \"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\\n\\n\", :+ \"# PinkGorilla \\n\\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\\n\\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\"}, :type \"text/x-markdown\"}} {:type :code, :kernel :clj, :content {:value \"; Automatically Download Dependencies (if they are not installed already) \\n (use '[pinkgorilla.helper]) \\n (pinkgorilla.helper/add-dependencies '[pinkgorilla.ui.gorilla-plot \\\"0.8.6\\\"])\", :type \"text/x-clojure\"}, :console-response \"\", :value-response {:type \"html\", :value [:span]}} {:type :code, :kernel :clj, :content {:value \"; Define Namespace for your notebook and require namespaces \\n(ns parched-volcano  \\n  (:require \\n     [pinkgorilla.ui.hiccup :refer [html!]] \\n     [pinkgorilla.ui.vega :refer [vega!]] \\n     [pinkgorilla.ui.gorilla-plot.core :refer [list-plot bar-chart compose histogram plot]])) \\n\", :type \"text/x-clojure\"}, :console-response \"\", :value-response {:type \"html\", :value [:span]}} {:type :code, :kernel :clj, :content {:value \"(html! \\n  [:div \\n    [:h4 \\\"Hiccup Markup\\\"] \\n    [:div {:style \\\"color:green;font-weight:bold;background-color:pink\\\"} \\\"World!\\\" \\n    [:ol \\n       [:li \\\"The Pinkie\\\"] \\n       [:li \\\"The Pinkie and the Brain\\\"]  \\n       [:li \\\"What will we be doing today?\\\"]]  \\n    [:img {:height 100 :width 100 :src \\\"https://images-na.ssl-images-amazon.com/images/I/61LeuO%2Bj0xL._SL1500_.jpg\\\"}]]])\\n            \", :type \"text/x-clojure\"}, :console-response \"\", :value-response {:type \"html\", :value [:span]}} {:type :code, :kernel :clj, :content {:value \" (list-plot [5 6 7 3 9 20] ) \\n\", :type \"text/x-clojure\"}, :console-response \"\", :value-response {:type \"html\", :value [:span]}} {:type :code, :kernel :clj, :content {:value \" (vega! \\\"https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json\\\" ) \\n\", :type \"text/x-clojure\"}, :console-response \"\", :value-response {:type \"html\", :value [:span]}}]}"]
;; <=

;; @@
(def a {:segments [{:type :free, :markup-visible false, :content {:value "# PinkGorilla \n\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\n\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.\n\n", :type "text/x-markdown"}} {:type :code, :kernel :clj, :content {:value "; Automatically Download Dependencies (if they are not installed already) \n (use '[pinkgorilla.helper]) \n (pinkgorilla.helper/add-dependencies '[pinkgorilla.ui.gorilla-plot \"0.8.6\"])", :type "text/x-clojure"}, :console-response "", :value-response {:type "html", :value [:span]}} {:type :code, :kernel :clj, :content {:value "; Define Namespace for your notebook and require namespaces \n(ns parched-volcano  \n  (:require \n     [pinkgorilla.ui.hiccup :refer [html!]] \n     [pinkgorilla.ui.vega :refer [vega!]] \n     [pinkgorilla.ui.gorilla-plot.core :refer [list-plot bar-chart compose histogram plot]])) \n", :type "text/x-clojure"}, :console-response "", :value-response {:type "html", :value [:span]}} {:type :code, :kernel :clj, :content {:value "(html! \n  [:div \n    [:h4 \"Hiccup Markup\"] \n    [:div {:style \"color:green;font-weight:bold;background-color:pink\"} \"World!\" \n    [:ol \n       [:li \"The Pinkie\"] \n       [:li \"The Pinkie and the Brain\"]  \n       [:li \"What will we be doing today?\"]]  \n    [:img {:height 100 :width 100 :src \"https://images-na.ssl-images-amazon.com/images/I/61LeuO%2Bj0xL._SL1500_.jpg\"}]]])\n            ", :type "text/x-clojure"}, :console-response "", :value-response {:type "html", :value [:span]}} {:type :code, :kernel :clj, :content {:value " (list-plot [5 6 7 3 9 20] ) \n", :type "text/x-clojure"}, :console-response "", :value-response {:type "html", :value [:span]}} {:type :code, :kernel :clj, :content {:value " (vega! \"https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json\" ) \n", :type "text/x-clojure"}, :console-response "", :value-response {:type "html", :value [:span]}}]} ) 
;; @@
;; =>
;;; ["^ ","~:type","html","~:content",["span",["^ ","~:class","clj-var"],"#'solitary-autumn/a"],"~:value","#'solitary-autumn/a"]
;; <=

;; @@
(def b  {:segments [{:type :free, :markup-visible false, :content {:value "# PinkGorilla \n\nShift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.\n\nIt's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.", :type "text/x-markdown"}} {:type :code, :kernel :clj, :content {:value "; Automatically Download Dependencies (if they are not installed already) \n (use '[pinkgorilla.helper]) \n (pinkgorilla.helper/add-dependencies '[pinkgorilla.ui.gorilla-plot \"0.8.6\"])", :type "text/x-clojure"}, :console-response "", :value-response {:type "html", :value [:span]}} {:type :code, :kernel :clj, :content {:value "; Define Namespace for your notebook and require namespaces \n(ns parched-volcano  \n  (:require \n     [pinkgorilla.ui.hiccup :refer [html!]] \n     [pinkgorilla.ui.vega :refer [vega!]] \n     [pinkgorilla.ui.gorilla-plot.core :refer [list-plot bar-chart compose histogram plot]])) \n", :type "text/x-clojure"}, :console-response "", :value-response {:type "html", :value [:span]}} {:type :code, :kernel :clj, :content {:value "(html! \n  [:div \n    [:h4 \"Hiccup Markup\"] \n    [:div {:style \"color:green;font-weight:bold;background-color:pink\"} \"World!\" \n    [:ol \n       [:li \"The Pinkie\"] \n       [:li \"The Pinkie and the Brain\"]  \n       [:li \"What will we be doing today?\"]]  \n    [:img {:height 100 :width 100 :src \"https://images-na.ssl-images-amazon.com/images/I/61LeuO%2Bj0xL._SL1500_.jpg\"}]]])\n            ", :type "text/x-clojure"}, :console-response "", :value-response {:type "html", :value [:span]}} {:type :code, :kernel :clj, :content {:value " (list-plot [5 6 7 3 9 20] ) \n", :type "text/x-clojure"}, :console-response "", :value-response {:type "html", :value [:span]}} {:type :code, :kernel :clj, :content {:value " (vega! \"https://raw.githubusercontent.com/vega/vega/master/docs/examples/bar-chart.vg.json\" ) \n", :type "text/x-clojure"}, :console-response "", :value-response {:type "html", :value [:span]}}]})
;; @@
;; =>
;;; ["^ ","~:type","html","~:content",["span",["^ ","~:class","clj-var"],"#'solitary-autumn/b"],"~:value","#'solitary-autumn/b"]
;; <=

;; @@
(defn to-key [segment]
  {(:id segment) segment})

(conj {} (to-key {:id :1 :b 5}))
;; @@
;; =>
;;; ["^ ","~:type","list-like","~:open",["span",["^ ","~:class","clj-map"],"{"],"~:close",["span",["^ ","^2","clj-map"],"}"],"~:separator",["span",", "],"~:items",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","~:content",["span",["^ ","^2","clj-keyword"],":1"],"~:value",":1"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-map"],"{"],"^3",["span",["^ ","^2","clj-map"],"}"],"^4",["span",", "],"^5",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":id"],"^7",":id"],["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":1"],"^7",":1"]],"^7","[:id :1]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":b"],"^7",":b"],["^ ","^0","html","^6",["span",["^ ","^2","clj-long"],"5"],"^7","5"]],"^7","[:b 5]"]],"^7","{:id :1, :b 5}"]],"^7","[:1 {:id :1, :b 5}]"]],"^7","{:1 {:id :1, :b 5}}"]
;; <=

;; @@
(reduce conj (map to-key [{:id :1 :b 5} {:id :6 :b 999}]))
;; @@
;; =>
;;; ["^ ","~:type","list-like","~:open",["span",["^ ","~:class","clj-map"],"{"],"~:close",["span",["^ ","^2","clj-map"],"}"],"~:separator",["span",", "],"~:items",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","~:content",["span",["^ ","^2","clj-keyword"],":1"],"~:value",":1"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-map"],"{"],"^3",["span",["^ ","^2","clj-map"],"}"],"^4",["span",", "],"^5",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":id"],"^7",":id"],["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":1"],"^7",":1"]],"^7","[:id :1]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":b"],"^7",":b"],["^ ","^0","html","^6",["span",["^ ","^2","clj-long"],"5"],"^7","5"]],"^7","[:b 5]"]],"^7","{:id :1, :b 5}"]],"^7","[:1 {:id :1, :b 5}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":6"],"^7",":6"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-map"],"{"],"^3",["span",["^ ","^2","clj-map"],"}"],"^4",["span",", "],"^5",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":id"],"^7",":id"],["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":6"],"^7",":6"]],"^7","[:id :6]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-keyword"],":b"],"^7",":b"],["^ ","^0","html","^6",["span",["^ ","^2","clj-long"],"999"],"^7","999"]],"^7","[:b 999]"]],"^7","{:id :6, :b 999}"]],"^7","[:6 {:id :6, :b 999}]"]],"^7","{:1 {:id :1, :b 5}, :6 {:id :6, :b 999}}"]
;; <=

;; @@

;; @@
